[aliases]
test = pytest
[pytest]
rsyncdirs = tests/
# rsyncignore = tests/
markers =
    functional: Heavy tests, could be with some DB or additional access (required isolated env.).
    regression: Simple API tests (checks basic functional of the services- smoke/sanity).
    protobuf: tests with protobuf.
# usefixtures = .
filterwarnings = ignore::DeprecationWarning
qt_log_level_fail = CRITICAL
qt_log_format = {rec.when} {rec.type_name}: {rec.message}
og_cli = 1
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format=%Y-%m-%d %H:%M:%S
addopts = --verbose
#         -p no:warnings
#         -n1
# timeout = 300
python_files = *_test.py
python_functions = test_*
testpaths = tests
# ENV={ENV}
# env = D:ENV=some_value
