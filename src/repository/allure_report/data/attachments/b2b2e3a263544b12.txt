log_decorator.py            21 INFO       --> r_time_count
conftest.py                 23 INFO     START TIME: 5.8850415
log_decorator.py            21 INFO       --> r_customer
log_decorator.py            21 INFO      RegisteredCustomer --> __init__
log_decorator.py            21 INFO      Customer --> __init__
log_decorator.py            21 INFO      Customer --> set_customer_details
log_decorator.py            21 INFO      Utils --> get_data
log_decorator.py            21 INFO      Utils --> get_account_details
log_decorator.py            21 INFO      Customer --> define_static_details
log_decorator.py            21 INFO      Utils --> get_faked_phone
log_decorator.py            21 INFO      Customer --> get_static_postman
log_decorator.py            21 INFO      AuthorizationService --> login_by_credentials
log_decorator.py            21 INFO      AuthorizationServiceRequest --> login_by_credentials
log_decorator.py            21 INFO      Utils --> to_json
authorization_requests.py   75 INFO     Request body: {
    "jsonrpc": "2.0",
    "method": "Authorization.LoginByCredentials",
    "params": [
        {
            "captcha": "captcha",
            "login": "Jeff_Pierce@sandbox7e64c317900647609c225574db67437b.mailgun.org",
            "password": "1Aa@<>12"
        }
    ]
}
log_decorator.py            21 INFO      Utils --> to_json
authorization_service.py   221 INFO     Service Response: {'id': '<nil>', 'result': {'token': 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkplZmZfUGllcmNlQHNhbmRib3g3ZTY0YzMxNzkwMDY0NzYwOWMyMjU1NzRkYjY3NDM3Yi5tYWlsZ3VuLm9yZyIsImZpcnN0TmFtZSI6IkplZmYiLCJsYXN0TmFtZSI6IlBpZXJjZSIsImN1c3RvbWVySWQiOiIxMDAwMDExMDAwMDAwMjM2NjUiLCJ0b2tlblR5cGUiOjAsImV4cCI6MTU1NTY2ODg5NSwianRpIjoiMTAwMDAxMTAwMDAwMDIzNjY1In0.zOtTm031vWOz8V_wbAzpuWYmDCIpNe0NGO2D98UHPBDctHMPQW0UKIKDAeTZ9nVTu2m39n363vVqzv4M1C1oxg', 'expiry': 86400, 'twoFactor': None}, 'error': None}
log_decorator.py            21 INFO      Customer --> get_postman_access
log_decorator.py            21 INFO      SqlDb --> customer_approval
log_decorator.py            21 INFO      SqlDb --> run_mysql_query
sql_db.py                   94 INFO     Customer 100001100000023665 successfully approved.
log_decorator.py            21 INFO      TestBalanceAfterOrderBuyCancelled --> test_add_customer_deposit
log_decorator.py            21 INFO      IBalanceService --> add_balance
log_decorator.py            21 INFO      IBalanceServiceRequest --> add
log_decorator.py            21 INFO      Utils --> to_json
balance_requests.py        126 INFO     Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.add",
    "params": {
        "amount": 10000.0,
        "currencyId": 2,
        "customerId": 100001100000023665,
        "metadata": {
            "operationReference": "QA-test"
        }
    }
}
log_decorator.py            21 INFO      Utils --> to_json
balance_service.py          47 INFO     Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'transactionGuid': '0-AAAAAABI+gc=', 'customerId': 100001100000023665, 'currencyId': 2, 'balance': {'total': '10000.00', 'frozen': '0.00', 'available': '10000.00'}}}
balance_after_order_buy_cancelled_test.py   27 INFO     Balance GUID: 0-AAAAAABI+gc=