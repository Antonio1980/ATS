log_decorator.py            21 INFO       --> r_time_count
conftest.py                 23 INFO     START TIME: 76.6083155
log_decorator.py            21 INFO       --> r_customer
log_decorator.py            21 INFO      RegisteredCustomer --> __init__
log_decorator.py            21 INFO      Customer --> __init__
log_decorator.py            21 INFO      Customer --> set_customer_details
log_decorator.py            21 INFO      Utils --> get_data
log_decorator.py            21 INFO      Utils --> get_account_details
log_decorator.py            21 INFO      Customer --> define_static_details
log_decorator.py            21 INFO      Utils --> get_faked_phone
log_decorator.py            21 INFO      Customer --> get_static_postman
log_decorator.py            21 INFO      AuthorizationService --> login_by_credentials
log_decorator.py            21 INFO      AuthorizationServiceRequest --> login_by_credentials
log_decorator.py            21 INFO      Utils --> to_json
authorization_requests.py   75 INFO     Request body: {
    "jsonrpc": "2.0",
    "method": "Authorization.LoginByCredentials",
    "params": [
        {
            "captcha": "captcha",
            "login": "Crystal_Bass@sandbox7e64c317900647609c225574db67437b.mailgun.org",
            "password": "1Aa@<>12"
        }
    ]
}
log_decorator.py            21 INFO      Utils --> to_json
authorization_service.py   221 INFO     Service Response: {'id': '<nil>', 'result': {'token': 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkNyeXN0YWxfQmFzc0BzYW5kYm94N2U2NGMzMTc5MDA2NDc2MDljMjI1NTc0ZGI2NzQzN2IubWFpbGd1bi5vcmciLCJmaXJzdE5hbWUiOiJDcnlzdGFsIiwibGFzdE5hbWUiOiJCYXNzIiwiY3VzdG9tZXJJZCI6IjEwMDAwMTEwMDAwMDAyMzA3NiIsInRva2VuVHlwZSI6MCwiZXhwIjoxNTU1NjY4OTY3LCJqdGkiOiIxMDAwMDExMDAwMDAwMjMwNzYifQ.mCTaL0Erv_Zgw01A3kkepOShIRMa9WKgcgUgPtSf_HcC3-RQ_MfUzpc6gwv_Umc1Zhq2VF_83bDskh32soM7Eg', 'expiry': 86400, 'twoFactor': None}, 'error': None}
log_decorator.py            21 INFO      Customer --> get_postman_access
log_decorator.py            21 INFO      SqlDb --> customer_approval
log_decorator.py            21 INFO      SqlDb --> run_mysql_query
sql_db.py                   94 INFO     Customer 100001100000023076 successfully approved.
log_decorator.py            21 INFO       --> add_balance
log_decorator.py            21 INFO      IBalanceService --> add_balance
log_decorator.py            21 INFO      IBalanceServiceRequest --> add
log_decorator.py            21 INFO      Utils --> to_json
balance_requests.py        126 INFO     Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.add",
    "params": {
        "amount": 5000.0,
        "currencyId": 10,
        "customerId": 100001100000023076,
        "metadata": {
            "operationReference": "QA-test"
        }
    }
}
log_decorator.py            21 INFO      Utils --> to_json
balance_service.py          47 INFO     Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'transactionGuid': '0-AAAAAABI+mY=', 'customerId': 100001100000023076, 'currencyId': 10, 'balance': {'total': '5000.0', 'frozen': '0', 'available': '5000.0'}}}
conftest.py                161 INFO     GUID: 0-AAAAAABI+mY=
log_decorator.py            21 INFO      IBalanceService --> add_balance
log_decorator.py            21 INFO      IBalanceServiceRequest --> add
log_decorator.py            21 INFO      Utils --> to_json
balance_requests.py        126 INFO     Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.add",
    "params": {
        "amount": 5000.0,
        "currencyId": 6,
        "customerId": 100001100000023076,
        "metadata": {
            "operationReference": "QA-test"
        }
    }
}
log_decorator.py            21 INFO      Utils --> to_json
balance_service.py          47 INFO     Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'transactionGuid': '0-AAAAAABI+mc=', 'customerId': 100001100000023076, 'currencyId': 6, 'balance': {'total': '5000.0', 'frozen': '0', 'available': '5000.0'}}}
conftest.py                161 INFO     GUID: 0-AAAAAABI+mc=
log_decorator.py            21 INFO      TestBalanceUnfrozenAfterTradeLessOrderPrice --> test_get_cur_customer_balance
log_decorator.py            21 INFO      BalanceService --> get_balance
log_decorator.py            21 INFO      BalanceServiceRequest --> get_balance
log_decorator.py            21 INFO      Utils --> to_json
p_balance_requests.py       26 INFO     Request body: {
    "jsonrpc": "2.0",
    "method": "Balance.Get",
    "params": [
        {
            "currencies": [
                10
            ]
        }
    ]
}
log_decorator.py            21 INFO      Utils --> to_json
p_balance_service.py        26 INFO     Service Response: {'id': None, 'result': {'balance': {'10': {'total': '5000.0', 'frozen': '0', 'available': '5000.0'}}}, 'error': None}
balance_unfrozen_after_trade_with_price_less_than_order_price_test.py   28 INFO     Balance before: {'id': None, 'result': {'balance': {'10': {'total': '5000.0', 'frozen': '0', 'available': '5000.0'}}}, 'error': None}