2019-04-18 13:18:59,839 - PYTHON_WTP_QA - INFO -   --> r_time_count
2019-04-18 13:18:59,840 - PYTHON_WTP_QA - INFO - START TIME: 252.831889
2019-04-18 13:18:59,843 - PYTHON_WTP_QA - INFO -  TestBuyLimitCanceledOrderUnfrozenBalance --> setUp
2019-04-18 13:18:59,844 - PYTHON_WTP_QA - INFO -  RegisteredCustomer --> __init__
2019-04-18 13:18:59,844 - PYTHON_WTP_QA - INFO -  Customer --> __init__
2019-04-18 13:18:59,844 - PYTHON_WTP_QA - INFO -  Customer --> set_customer_details
2019-04-18 13:18:59,844 - PYTHON_WTP_QA - INFO -  Utils --> get_data
2019-04-18 13:18:59,845 - PYTHON_WTP_QA - INFO -  Utils --> get_account_details
2019-04-18 13:18:59,846 - PYTHON_WTP_QA - INFO -  Customer --> define_static_details
2019-04-18 13:18:59,847 - PYTHON_WTP_QA - INFO -  Utils --> get_faked_phone
2019-04-18 13:18:59,973 - PYTHON_WTP_QA - INFO -  Customer --> get_static_postman
2019-04-18 13:18:59,973 - PYTHON_WTP_QA - INFO -  AuthorizationService --> login_by_credentials
2019-04-18 13:18:59,973 - PYTHON_WTP_QA - INFO -  AuthorizationServiceRequest --> login_by_credentials
2019-04-18 13:18:59,974 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:18:59,974 - PYTHON_WTP_QA - INFO - Request body: {
    "jsonrpc": "2.0",
    "method": "Authorization.LoginByCredentials",
    "params": [
        {
            "captcha": "captcha",
            "login": "Matthew_Cain@sandbox7e64c317900647609c225574db67437b.mailgun.org",
            "password": "1Aa@<>12"
        }
    ]
}
2019-04-18 13:18:59,974 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,322 - PYTHON_WTP_QA - INFO - Service Response: {'id': '<nil>', 'result': {'token': 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ik1hdHRoZXdfQ2FpbkBzYW5kYm94N2U2NGMzMTc5MDA2NDc2MDljMjI1NTc0ZGI2NzQzN2IubWFpbGd1bi5vcmciLCJmaXJzdE5hbWUiOiJNYXR0aGV3X0NhaW4iLCJsYXN0TmFtZSI6Ik1hdHRoZXdfQ2FpbiIsImN1c3RvbWVySWQiOiIxMDAwMDExMDAwMDAwMjM3NjMiLCJ0b2tlblR5cGUiOjAsImV4cCI6MTU1NTY2OTE0MSwianRpIjoiMTAwMDAxMTAwMDAwMDIzNzYzIn0.eCwPOXotKP6meMDHywGgjaE5wXqODCpkJGBBTCpIcYzM86jcdaq5YWHLkjlIuKHc4svoJSsgvzYkfYW0YWaKPQ', 'expiry': 86400, 'twoFactor': None}, 'error': None}
2019-04-18 13:19:01,323 - PYTHON_WTP_QA - INFO -  Customer --> get_postman_access
2019-04-18 13:19:01,323 - PYTHON_WTP_QA - INFO -  IBalanceService --> add_balance
2019-04-18 13:19:01,324 - PYTHON_WTP_QA - INFO -  IBalanceServiceRequest --> add
2019-04-18 13:19:01,324 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,325 - PYTHON_WTP_QA - INFO - Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.add",
    "params": {
        "amount": 10000.0,
        "currencyId": 1,
        "customerId": 100001100000023763,
        "metadata": {
            "operationReference": "QA-test"
        }
    }
}
2019-04-18 13:19:01,326 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,344 - PYTHON_WTP_QA - INFO - Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'transactionGuid': '0-AAAAAABI+08=', 'customerId': 100001100000023763, 'currencyId': 1, 'balance': {'total': '10000.0040', 'frozen': '0.004', 'available': '10000.0000'}}}
2019-04-18 13:19:01,346 - PYTHON_WTP_QA - INFO -  TestBuyLimitCanceledOrderUnfrozenBalance --> test_buy_limit_canceled_order_unfrozen_balance
2019-04-18 13:19:01,346 - PYTHON_WTP_QA - INFO - TEST CASE N: TS- 1 STARTED !
2019-04-18 13:19:01,346 - PYTHON_WTP_QA - INFO - method test_buy_limit_canceled_order_unfrozen_balance =['trading_sanity', ]), 
2019-04-18 13:19:01,347 - PYTHON_WTP_QA - INFO -  IBalanceService --> get_currency_balance
2019-04-18 13:19:01,347 - PYTHON_WTP_QA - INFO -  IBalanceServiceRequest --> get
2019-04-18 13:19:01,348 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,348 - PYTHON_WTP_QA - INFO - Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.get",
    "params": {
        "currencyId": 3,
        "customerId": 100001100000023763
    }
}
2019-04-18 13:19:01,348 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,354 - PYTHON_WTP_QA - INFO - Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'customerId': 100001100000023763, 'currencyId': 3, 'balance': {'total': '150019.9989925', 'frozen': '0.0000000', 'available': '150019.9989925'}}}
2019-04-18 13:19:01,354 - PYTHON_WTP_QA - INFO -  IBalanceService --> get_currency_balance
2019-04-18 13:19:01,354 - PYTHON_WTP_QA - INFO -  IBalanceServiceRequest --> get
2019-04-18 13:19:01,355 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,355 - PYTHON_WTP_QA - INFO - Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.get",
    "params": {
        "currencyId": 1,
        "customerId": 100001100000023763
    }
}
2019-04-18 13:19:01,355 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,361 - PYTHON_WTP_QA - INFO - Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'customerId': 100001100000023763, 'currencyId': 1, 'balance': {'total': '10000.0040', 'frozen': '0.004', 'available': '10000.0000'}}}
2019-04-18 13:19:01,362 - PYTHON_WTP_QA - INFO -  RedisDb --> get_orders_best_price_and_quantity
2019-04-18 13:19:01,363 - PYTHON_WTP_QA - INFO -  Order --> set_order
2019-04-18 13:19:01,364 - PYTHON_WTP_QA - INFO -  Calculator --> calculate_decimals
2019-04-18 13:19:01,364 - PYTHON_WTP_QA - INFO - FLOAT
2019-04-18 13:19:01,364 - PYTHON_WTP_QA - INFO -  Calculator --> calculate_decimals
2019-04-18 13:19:01,364 - PYTHON_WTP_QA - INFO - FLOAT
2019-04-18 13:19:01,364 - PYTHON_WTP_QA - INFO - Order was set to Order(type: 2, price: [pure-2856.0, p_value-28560, p_presc.-1], quantity: [pure-1, q_value-10, q_presc.-1], order_id: , internal_id: 0, direction: 1, instrument_id: 1007, date_created: 2019-04-18), customer ID: 0, order status: , direction: 1,  filled quantity: 0, time in force: , transaction id: 
2019-04-18 13:19:01,365 - PYTHON_WTP_QA - INFO -  OrderService --> create_order
2019-04-18 13:19:01,365 - PYTHON_WTP_QA - INFO -  OrderServiceRequest --> create_order
2019-04-18 13:19:01,365 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:01,365 - PYTHON_WTP_QA - INFO - Request body: {
    "jsonrpc": "2.0",
    "method": "OrderManagement.Create",
    "params": [
        {
            "order": {
                "direction": 1,
                "instrumentId": 1007,
                "orderType": 2,
                "price": {
                    "decimals": 1,
                    "value": 28560
                },
                "quantity": {
                    "decimals": 1,
                    "value": 10
                }
            }
        }
    ]
}
2019-04-18 13:19:01,366 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:02,361 - PYTHON_WTP_QA - INFO - Service Response: {'id': '<nil>', 'result': {'status': True, 'error': None, 'externalOrderId': '0-AAAAAABI+1A='}, 'error': None}
2019-04-18 13:19:02,362 - PYTHON_WTP_QA - INFO - 2, 0-AAAAAABI+1A=, 1, 2019-04-18 - 255.3536802
2019-04-18 13:19:05,363 - PYTHON_WTP_QA - INFO -  IBalanceService --> get_currency_balance
2019-04-18 13:19:05,363 - PYTHON_WTP_QA - INFO -  IBalanceServiceRequest --> get
2019-04-18 13:19:05,364 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:05,365 - PYTHON_WTP_QA - INFO - Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.get",
    "params": {
        "currencyId": 3,
        "customerId": 100001100000023763
    }
}
2019-04-18 13:19:05,365 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:05,375 - PYTHON_WTP_QA - INFO - Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'customerId': 100001100000023763, 'currencyId': 3, 'balance': {'total': '150019.9989925', 'frozen': '0.0000000', 'available': '150019.9989925'}}}
2019-04-18 13:19:05,376 - PYTHON_WTP_QA - INFO -  IBalanceService --> get_currency_balance
2019-04-18 13:19:05,376 - PYTHON_WTP_QA - INFO -  IBalanceServiceRequest --> get
2019-04-18 13:19:05,377 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:05,378 - PYTHON_WTP_QA - INFO - Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.get",
    "params": {
        "currencyId": 1,
        "customerId": 100001100000023763
    }
}
2019-04-18 13:19:05,379 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:05,391 - PYTHON_WTP_QA - INFO - Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'customerId': 100001100000023763, 'currencyId': 1, 'balance': {'total': '10000.0040', 'frozen': '2856.004', 'available': '7144.0000'}}}
2019-04-18 13:19:05,391 - PYTHON_WTP_QA - INFO -  OrderService --> cancel_order
2019-04-18 13:19:05,392 - PYTHON_WTP_QA - INFO -  OrderServiceRequest --> cancel_order
2019-04-18 13:19:05,392 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:05,393 - PYTHON_WTP_QA - INFO - Request body: {
    "jsonrpc": "2.0",
    "method": "OrderManagement.Cancel",
    "params": [
        {
            "externalOrderId": "0-AAAAAABI+1A="
        }
    ]
}
2019-04-18 13:19:05,394 - PYTHON_WTP_QA - INFO -  Utils --> to_json
2019-04-18 13:19:06,838 - PYTHON_WTP_QA - INFO - Service Response: {'id': '', 'result': None, 'error': '{"type":5,"term":"order_cancellation.validation.order_not_found","details":"order to cancel is not found","incident_id":"04249837-3d2b-42db-aded-560c8a617080"}'}
2019-04-18 13:19:06,839 - PYTHON_WTP_QA - INFO -  TestRail --> update_test_case
2019-04-18 13:19:08,682 - PYTHON_WTP_QA - INFO - Server responded: {'error': 'Field :case_id is not a valid ID.'}
2019-04-18 13:19:08,682 - PYTHON_WTP_QA - CRITICAL - test_buy_limit_canceled_order_unfrozen_balance AssertionError automation_wrapper throws an exception: None
Traceback (most recent call last):
  File "C:\GitLab\platform-server_qa\src\base\log_decorator.py", line 22, in log_wrapper
    return func(*args, **kwargs)
  File "C:\GitLab\platform-server_qa\tests\web_platform_tests\trading_sanity_tests\order_limit_buy_canceled_and_balance_unfrozen_test.py", line 75, in test_buy_limit_canceled_order_unfrozen_balance
    assert canceled_status_error is None
AssertionError: assert '{"type":5,"term":"order_cancellation.validation.order_not_found","details":"order to cancel is not found","incident_id":"04249837-3d2b-42db-aded-560c8a617080"}' is None
2019-04-18 13:19:08,698 - PYTHON_WTP_QA - INFO - END TIME: 261.6893899
2019-04-18 13:19:08,698 - PYTHON_WTP_QA - INFO - AVERAGE OF THE TEST CASE RUN TIME: 8.857500899999991 seconds
