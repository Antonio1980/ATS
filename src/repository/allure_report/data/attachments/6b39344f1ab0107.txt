log_decorator.py            21 INFO       --> r_time_count
conftest.py                 23 INFO     START TIME: 38.9758922
log_decorator.py            21 INFO       --> r_customer
log_decorator.py            21 INFO      RegisteredCustomer --> __init__
log_decorator.py            21 INFO      Customer --> __init__
log_decorator.py            21 INFO      Customer --> set_customer_details
log_decorator.py            21 INFO      Utils --> get_data
log_decorator.py            21 INFO      Utils --> get_account_details
log_decorator.py            21 INFO      Customer --> define_static_details
log_decorator.py            21 INFO      Utils --> get_faked_phone
log_decorator.py            21 INFO      Customer --> get_static_postman
log_decorator.py            21 INFO      AuthorizationService --> login_by_credentials
log_decorator.py            21 INFO      AuthorizationServiceRequest --> login_by_credentials
log_decorator.py            21 INFO      Utils --> to_json
authorization_requests.py   75 INFO     Request body: {
    "jsonrpc": "2.0",
    "method": "Authorization.LoginByCredentials",
    "params": [
        {
            "captcha": "captcha",
            "login": "Sylvia_Robles@sandbox7e64c317900647609c225574db67437b.mailgun.org",
            "password": "1Aa@<>12"
        }
    ]
}
log_decorator.py            21 INFO      Utils --> to_json
authorization_service.py   221 INFO     Service Response: {'id': '<nil>', 'result': {'token': 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IlN5bHZpYV9Sb2JsZXNAc2FuZGJveDdlNjRjMzE3OTAwNjQ3NjA5YzIyNTU3NGRiNjc0MzdiLm1haWxndW4ub3JnIiwiZmlyc3ROYW1lIjoiU3lsdmlhIiwibGFzdE5hbWUiOiJSb2JsZXMiLCJjdXN0b21lcklkIjoiMTAwMDAxMTAwMDAwMDIzMzk3IiwidG9rZW5UeXBlIjowLCJleHAiOjE1NTU2Njg5MjgsImp0aSI6IjEwMDAwMTEwMDAwMDAyMzM5NyJ9.tMPwBi4haV_lI9LGvCjQGRuPBqR37DWhT6u0zf0M3L1h0aVjObpalMtxvaZN_wV-ab9GDPPG6VZYnqu2epGv_A', 'expiry': 86400, 'twoFactor': None}, 'error': None}
log_decorator.py            21 INFO      Customer --> get_postman_access
log_decorator.py            21 INFO      SqlDb --> customer_approval
log_decorator.py            21 INFO      SqlDb --> run_mysql_query
sql_db.py                   94 INFO     Customer 100001100000023397 successfully approved.
log_decorator.py            21 INFO      TestBalanceAfterOrderSellCancelled --> test_add_customer_deposit
log_decorator.py            21 INFO      IBalanceService --> add_balance
log_decorator.py            21 INFO      IBalanceServiceRequest --> add
log_decorator.py            21 INFO      Utils --> to_json
balance_requests.py        126 INFO     Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.add",
    "params": {
        "amount": 10.0,
        "currencyId": 3,
        "customerId": 100001100000023397,
        "metadata": {
            "operationReference": "QA-test"
        }
    }
}
log_decorator.py            21 INFO      Utils --> to_json
balance_service.py          47 INFO     Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'transactionGuid': '0-AAAAAABI+iM=', 'customerId': 100001100000023397, 'currencyId': 3, 'balance': {'total': '10.000', 'frozen': '0.000', 'available': '10.000'}}}
balance_after_order_sell_cancelled_test.py   25 INFO     Balance GUID: 0-AAAAAABI+iM=