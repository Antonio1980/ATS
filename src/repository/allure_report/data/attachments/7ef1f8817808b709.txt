log_decorator.py            21 INFO       --> r_time_count
conftest.py                 23 INFO     START TIME: 196.2931143
log_decorator.py            21 INFO      TestBuyLimitPartiallyFilledCanceledBalanceUnfrozen --> setUp
log_decorator.py            21 INFO      RegisteredCustomer --> __init__
log_decorator.py            21 INFO      Customer --> __init__
log_decorator.py            21 INFO      Customer --> set_customer_details
log_decorator.py            21 INFO      Utils --> get_data
log_decorator.py            21 INFO      Utils --> get_account_details
log_decorator.py            21 INFO      Customer --> define_static_details
log_decorator.py            21 INFO      Utils --> get_faked_phone
log_decorator.py            21 INFO      Customer --> get_static_postman
log_decorator.py            21 INFO      AuthorizationService --> login_by_credentials
log_decorator.py            21 INFO      AuthorizationServiceRequest --> login_by_credentials
log_decorator.py            21 INFO      Utils --> to_json
authorization_requests.py   75 INFO     Request body: {
    "jsonrpc": "2.0",
    "method": "Authorization.LoginByCredentials",
    "params": [
        {
            "captcha": "captcha",
            "login": "Kathleen_Barnes@sandbox7e64c317900647609c225574db67437b.mailgun.org",
            "password": "1Aa@<>12"
        }
    ]
}
log_decorator.py            21 INFO      Utils --> to_json
authorization_service.py   221 INFO     Service Response: {'id': '<nil>', 'result': {'token': 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkthdGhsZWVuX0Jhcm5lc0BzYW5kYm94N2U2NGMzMTc5MDA2NDc2MDljMjI1NTc0ZGI2NzQzN2IubWFpbGd1bi5vcmciLCJmaXJzdE5hbWUiOiJLYXRobGVlbiIsImxhc3ROYW1lIjoiQmFybmVzIiwiY3VzdG9tZXJJZCI6IjEwMDAwMTEwMDAwMDAyMzQ2NiIsInRva2VuVHlwZSI6MCwiZXhwIjoxNTU1NjY5MDg0LCJqdGkiOiIxMDAwMDExMDAwMDAwMjM0NjYifQ.goGmM25qF7hk9tqDFBGIHd7cPw7DiByRZ-0NNEgYIzaxq-idQiddbfSUxGl-_AzgngFM2Q50QBrRXs40VA0lQQ', 'expiry': 86400, 'twoFactor': None}, 'error': None}
log_decorator.py            21 INFO      Customer --> get_postman_access
log_decorator.py            21 INFO      IBalanceService --> add_balance
log_decorator.py            21 INFO      IBalanceServiceRequest --> add
log_decorator.py            21 INFO      Utils --> to_json
balance_requests.py        126 INFO     Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.add",
    "params": {
        "amount": 10080000.0,
        "currencyId": 1,
        "customerId": 100001100000023466,
        "metadata": {
            "operationReference": "QA-test"
        }
    }
}
log_decorator.py            21 INFO      Utils --> to_json
balance_service.py          47 INFO     Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'transactionGuid': '0-AAAAAABI+zQ=', 'customerId': 100001100000023466, 'currencyId': 1, 'balance': {'total': '10092678.400', 'frozen': '0.000', 'available': '10092678.400'}}}
log_decorator.py            21 INFO      TestBuyLimitPartiallyFilledCanceledBalanceUnfrozen --> test_buy_limit_partially_filled_canceled_balance_unfrozen
buy_limit_partially_filled_cancelled_and_balance_unfrozen_test.py   40 INFO     TEST CASE N: TS- 3 STARTED !
buy_limit_partially_filled_cancelled_and_balance_unfrozen_test.py   42 INFO     method_buy_limit_partially_filled_canceled_balance_unfrozen, 
log_decorator.py            21 INFO      IBalanceService --> get_currency_balance
log_decorator.py            21 INFO      IBalanceServiceRequest --> get
log_decorator.py            21 INFO      Utils --> to_json
balance_requests.py         36 INFO     Request body: {
    "id": "1",
    "jsonrpc": "2.0",
    "method": "balance.get",
    "params": {
        "currencyId": 1,
        "customerId": 100001100000023466
    }
}
log_decorator.py            21 INFO      Utils --> to_json
balance_service.py          65 INFO     Service Response: {'jsonrpc': '2.0', 'id': '1', 'result': {'customerId': 100001100000023466, 'currencyId': 1, 'balance': {'total': '10092678.400', 'frozen': '0.000', 'available': '10092678.400'}}}
log_decorator.py            21 INFO      SqlDb --> get_quantity_tail_digits
log_decorator.py            21 INFO      SqlDb --> run_mysql_query
log_decorator.py            21 INFO      SqlDb --> run_mysql_query
log_decorator.py            21 INFO      SqlDb --> get_price_tail_digits
log_decorator.py            21 INFO      SqlDb --> run_mysql_query
log_decorator.py            21 INFO      SqlDb --> run_mysql_query
log_decorator.py            21 INFO      RedisDb --> get_orders_best_price_and_quantity
log_decorator.py            21 INFO      TestRail --> update_test_case
testrail.py                 38 INFO     Server responded: {'error': 'Field :case_id is not a valid ID.'}
log_decorator.py            26 CRITICAL test_buy_limit_partially_filled_canceled_balance_unfrozen IndexError automation_wrapper throws an exception: None
Traceback (most recent call last):
  File "C:\GitLab\platform-server_qa\src\base\log_decorator.py", line 22, in log_wrapper
    return func(*args, **kwargs)
  File "C:\GitLab\platform-server_qa\tests\web_platform_tests\trading_sanity_tests\buy_limit_partially_filled_cancelled_and_balance_unfrozen_test.py", line 55, in test_buy_limit_partially_filled_canceled_balance_unfrozen
    quantity = round((best_price_and_quantity[0][1] + best_price_and_quantity[1][1]) / 2,
IndexError: list index out of range
conftest.py                 27 INFO     END TIME: 198.2019001
conftest.py                 28 INFO     AVERAGE OF THE TEST CASE RUN TIME: 1.9087857999999756 seconds