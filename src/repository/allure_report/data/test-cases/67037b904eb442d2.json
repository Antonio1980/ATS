{
  "uid" : "67037b904eb442d2",
  "name" : "test_place_third_order[add_balance0]",
  "fullName" : "tests.web_platform_tests.trading_sanity_tests.balance_unfrozen_after_trade_with_price_less_than_order_price_test.TestBalanceUnfrozenAfterTradeLessOrderPrice#test_place_third_order[add_balance0]",
  "historyId" : "92c169535cb3648213a26d75ca2e4888",
  "time" : {
    "start" : 1555582577146,
    "stop" : 1555582579486,
    "duration" : 2340
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '{\"type\":2,\"term\":\"balance_freezing.freezing validation.balance_freeze\",\"details\":\"error freezing balance\",\"incident_id\":\"656f45ad-420d-4cb9-8b37-1a1f738b769b\"}' is None",
  "statusTrace" : "self = <tests.web_platform_tests.trading_sanity_tests.balance_unfrozen_after_trade_with_price_less_than_order_price_test.TestBalanceUnfrozenAfterTradeLessOrderPrice object at 0x000002335644A128>\nr_customer = <src.base.customer.registered_customer.RegisteredCustomer object at 0x00000233563FB080>\n\n    @automation_logger(logger)\n    def test_place_third_order(self, r_customer):\n        third_order = Order().set_order(1, self.instrument_id, 180, 60)\n        order_response = r_customer.postman.order_service.create_order(third_order)\n        logger.logger.info(\"3 Order: {0}\".format(order_response))\n>       assert order_response['error'] is None\nE       assert '{\"type\":2,\"term\":\"balance_freezing.freezing validation.balance_freeze\",\"details\":\"error freezing balance\",\"incident_id\":\"656f45ad-420d-4cb9-8b37-1a1f738b769b\"}' is None\n\ntests\\web_platform_tests\\trading_sanity_tests\\balance_unfrozen_after_trade_with_price_less_than_order_price_test.py:54: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "r_time_count",
    "time" : {
      "start" : 1555582563615,
      "stop" : 1555582563617,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "add_balance",
    "time" : {
      "start" : 1555582567708,
      "stop" : 1555582567760,
      "duration" : 52
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "r_customer",
    "time" : {
      "start" : 1555582563617,
      "stop" : 1555582567708,
      "duration" : 4091
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '{\"type\":2,\"term\":\"balance_freezing.freezing validation.balance_freeze\",\"details\":\"error freezing balance\",\"incident_id\":\"656f45ad-420d-4cb9-8b37-1a1f738b769b\"}' is None",
    "statusTrace" : "self = <tests.web_platform_tests.trading_sanity_tests.balance_unfrozen_after_trade_with_price_less_than_order_price_test.TestBalanceUnfrozenAfterTradeLessOrderPrice object at 0x000002335644A128>\nr_customer = <src.base.customer.registered_customer.RegisteredCustomer object at 0x00000233563FB080>\n\n    @automation_logger(logger)\n    def test_place_third_order(self, r_customer):\n        third_order = Order().set_order(1, self.instrument_id, 180, 60)\n        order_response = r_customer.postman.order_service.create_order(third_order)\n        logger.logger.info(\"3 Order: {0}\".format(order_response))\n>       assert order_response['error'] is None\nE       assert '{\"type\":2,\"term\":\"balance_freezing.freezing validation.balance_freeze\",\"details\":\"error freezing balance\",\"incident_id\":\"656f45ad-420d-4cb9-8b37-1a1f738b769b\"}' is None\n\ntests\\web_platform_tests\\trading_sanity_tests\\balance_unfrozen_after_trade_with_price_less_than_order_price_test.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "636696ead65e44ca",
      "name" : "log",
      "source" : "636696ead65e44ca.txt",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "cff4f7c17c599fed",
      "name" : "stdout",
      "source" : "cff4f7c17c599fed.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "a89ef2a11bb22789",
      "name" : "stderr",
      "source" : "a89ef2a11bb22789.txt",
      "type" : "text/plain",
      "size" : 2918
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "r_time_count::stop_counter",
    "time" : {
      "start" : 1555582579735,
      "stop" : 1555582579736,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "incremental"
  }, {
    "name" : "tag",
    "value" : "functional"
  }, {
    "name" : "tag",
    "value" : "trading_sanity"
  }, {
    "name" : "tag",
    "value" : "balance"
  }, {
    "name" : "parentSuite",
    "value" : "tests.web_platform_tests.trading_sanity_tests"
  }, {
    "name" : "suite",
    "value" : "balance_unfrozen_after_trade_with_price_less_than_order_price_test"
  }, {
    "name" : "subSuite",
    "value" : "TestBalanceUnfrozenAfterTradeLessOrderPrice"
  }, {
    "name" : "host",
    "value" : "QA-LP-ANTONS"
  }, {
    "name" : "thread",
    "value" : "121748-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.web_platform_tests.trading_sanity_tests.balance_unfrozen_after_trade_with_price_less_than_order_price_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "add_balance",
    "value" : "[10, 6]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "functional", "balance", "trading_sanity", "incremental" ]
  },
  "source" : "67037b904eb442d2.json",
  "parameterValues" : [ "[10, 6]" ]
}