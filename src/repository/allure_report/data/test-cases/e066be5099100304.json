{
  "uid" : "e066be5099100304",
  "name" : "TRADING SANITY TEST 'TS- 12'",
  "fullName" : "tests.web_platform_tests.trading_sanity_tests.sell_limit_order_matched_and_balance_unfrozen_test.TestSellOrderMatchedWithBalanceUnfrozen#test_sell_order_matched_with_balance_unfrozen",
  "historyId" : "8653e2384e70c92fefefdd8c8f2da6c6",
  "time" : {
    "start" : 1555582800126,
    "stop" : 1555582889799,
    "duration" : 89673
  },
  "description" : "\n    Verify that customer balance unfrozen after sell order matched.\n    10 Iterations (configurable by \"iterations\" local test variable).\n    ",
  "descriptionHtml" : "<pre><code>Verify that customer balance unfrozen after sell order matched.\n10 Iterations (configurable by &quot;iterations&quot; local test variable).\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "r_time_count",
    "time" : {
      "start" : 1555582800124,
      "stop" : 1555582800125,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1555582800124,
      "stop" : 1555582800124,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n    Verify that customer balance unfrozen after sell order matched.\n    10 Iterations (configurable by \"iterations\" local test variable).\n    ",
    "status" : "passed",
    "steps" : [ {
      "name" : "SetUp: registration new customer, adding credit card with EUR and BTC to balance.",
      "time" : {
        "start" : 1555582800127,
        "stop" : 1555582801503,
        "duration" : 1376
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "args",
        "value" : "(<tests.web_platform_tests.trading_sanity_tests.sell_limit_order_matched_and_balance_unfrozen_test.TestSellOrderMatchedWithBalanceUnfrozen testMethod=test_sell_order_matched_with_balance_unfrozen>,)"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Starting with: test_sell_order_matched_with_balance_unfrozen",
      "time" : {
        "start" : 1555582801504,
        "stop" : 1555582889797,
        "duration" : 88293
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "args",
        "value" : "(<tests.web_platform_tests.trading_sanity_tests.sell_limit_order_matched_and_balance_unfrozen_test.TestSellOrderMatchedWithBalanceUnfrozen testMethod=test_sell_order_matched_with_balance_unfrozen>,)"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "bd8218cbd5359ab9",
      "name" : "log",
      "source" : "bd8218cbd5359ab9.txt",
      "type" : "text/plain",
      "size" : 238576
    }, {
      "uid" : "bbac71e6f34ee8ea",
      "name" : "stdout",
      "source" : "bbac71e6f34ee8ea.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "c37c651bdf31ea57",
      "name" : "stderr",
      "source" : "c37c651bdf31ea57.txt",
      "type" : "text/plain",
      "size" : 241848
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false
  },
  "afterStages" : [ {
    "name" : "r_time_count::stop_counter",
    "time" : {
      "start" : 1555582889806,
      "stop" : 1555582889808,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1555582889812,
      "stop" : 1555582889812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "tag",
    "value" : "functional"
  }, {
    "name" : "tag",
    "value" : "trading_sanity"
  }, {
    "name" : "tag",
    "value" : "balance"
  }, {
    "name" : "parentSuite",
    "value" : "tests.web_platform_tests.trading_sanity_tests"
  }, {
    "name" : "suite",
    "value" : "sell_limit_order_matched_and_balance_unfrozen_test"
  }, {
    "name" : "subSuite",
    "value" : "TestSellOrderMatchedWithBalanceUnfrozen"
  }, {
    "name" : "host",
    "value" : "QA-LP-ANTONS"
  }, {
    "name" : "thread",
    "value" : "121748-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.web_platform_tests.trading_sanity_tests.sell_limit_order_matched_and_balance_unfrozen_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "TestSellOrderMatchedWithBalanceUnfrozen",
    "url" : "https://gitlab.com/cx_group/qa/platform-server_qa/blob/master/tests/web_platform_tests/balance_sanity_tests/sell_limit_order_matched_and_balance_unfrozen_test.py",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "functional", "balance", "trading_sanity" ]
  },
  "source" : "e066be5099100304.json",
  "parameterValues" : [ ]
}