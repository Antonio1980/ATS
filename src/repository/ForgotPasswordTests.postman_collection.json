{
	"info": {
		"_postman_id": "2d69e8eb-12bf-4b56-9193-b881582d0f51",
		"name": "ForgotPasswordTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetNewEmail",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bb342d8f-67c9-4f01-acbc-627101e635c0",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"SetEnvironmentVariables\", function (err, res)",
							"{",
							"    const guerrilla_url = \"https://www.guerrillamail.com/ajax.php?f=\",",
							"          action = \"get_email_address\",",
							"          dx = pm.environment.get(\"DX\");",
							"    if(dx === \"DX\")",
							"    {",
							"        postman.setEnvironmentVariable(\"BaseUrl\", guerrilla_url);",
							"        postman.setEnvironmentVariable(\"action\", action);",
							"    }",
							"    else",
							"    {",
							"        return console.log(\"Failed to set environment variables.\");",
							"    }  ",
							"    console.log(err ? err : res);",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "540af4dc-5710-4a47-bc03-d8e133a15d77",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    var email_addr = \"\",",
							"        reason = \"\",",
							"        time_stamp = \"\",",
							"        sid_token = \"\",",
							"        alias = \"\",",
							"        statusCode = \"Internal Server Error\";",
							"        var re = new RegExp(/[\\w\\.-]+/);",
							"    if((pm.response.reason(responseBody)) !== statusCode)",
							"    {",
							"        var jsonData = pm.response.json();",
							"        email_addr = jsonData.email_addr;",
							"        username = email_addr.match(re);",
							"        time_stamp = jsonData.email_timestamp;",
							"        sid_token = jsonData.sid_token;",
							"        alias = jsonData.alias;",
							"        pm.environment.set(\"username\", username);",
							"        pm.environment.set(\"email\", email_addr);",
							"        pm.environment.set(\"time_stamp\", time_stamp);",
							"        pm.environment.set(\"sid_token\", sid_token);",
							"        pm.environment.set(\"alias\", alias);",
							"    }",
							"    else",
							"    {",
							"        reason = pm.response.reason(responseBody);",
							"        console.log(reason);",
							"        return pm.response.to.have.status(200);",
							"    } ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{BaseUrl}}{{action}}",
					"host": [
						"{{BaseUrl}}{{action}}"
					]
				}
			},
			"response": [
				{
					"name": "GetNewEmail-Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}{{action}}",
							"host": [
								"{{BaseUrl}}{{action}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate",
							"name": "Cache-Control",
							"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
						},
						{
							"key": "Connection",
							"value": "close",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Thu, 26 Jul 2018 14:33:51 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT",
							"name": "Expires",
							"description": "Gives the date/time after which the response is considered stale"
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000",
							"name": "Strict-Transport-Security",
							"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "X-Content-Type-Options",
							"value": ": nosniff",
							"name": "X-Content-Type-Options",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date",
							"httpOnly": true,
							"domain": "guerrillamail.com",
							"path": "/",
							"secure": false,
							"value": "d57f226cf4423d23306d4ae708a99b1051532602813",
							"key": "__cfduid"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "www.guerrillamail.com",
							"path": "/",
							"secure": false,
							"value": "kuro6umn9cbr97br4d03qetal1",
							"key": "PHPSESSID"
						}
					],
					"body": "{\"email_addr\":\"vhioywqa@guerrillamailblock.com\",\"email_timestamp\":1532614676,\"alias\":\"dwebs5+9gwtiy2npcny0\",\"sid_token\":\"kuro6umn9cbr97br4d03qetal1\"}"
				}
			]
		},
		{
			"name": "LoginByCredentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b0468c9-03b1-466a-94af-71907f91731f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    var auth_token = \"\",",
							"        reason = \"\",",
							"        statusCode = \"Internal Server Error\";",
							"    if((pm.response.reason(responseBody)) !== statusCode)",
							"    {",
							"        var jsonData = pm.response.json();",
							"        auth_token = jsonData.result.token;",
							"        if(auth_token.length !== 0)",
							"        {",
							"            pm.environment.set(\"auth_token\", auth_token);",
							"        }",
							"        else",
							"        {",
							"            console.log(jsonData.result.errors.Email);",
							"        }",
							"    }",
							"    else",
							"    {",
							"        reason = pm.response.reason(responseBody);",
							"        console.log(reason);",
							"        return pm.response.to.have.status(200);",
							"    } ",
							"});",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3ad58f5a-4b8d-4e49-8174-6e4aba50663e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"SetEnvironmentVariables\", function (err, res)",
							"{",
							"    const staging_url = \"staging-acl.dx.exchange\",",
							"          integration_url = \"integration-acl.dx.exchange\",",
							"          base_url = \"acl.dx.exchange\",",
							"          wtp_staging_url = \"http://staging-plat.dx.exchange:30010\",",
							"          wtp_integration_url = \"http://integration-plat.dx.exchange:30010\",",
							"          wtp_base_url = \"https://plat.dx.exchange\",",
							"          dx = pm.environment.get(\"DX\"),",
							"          protocol = \"https://\"; // \"http://\"\"",
							"    if(dx === \"DX\")",
							"    {",
							"        postman.setEnvironmentVariable(\"protocol\", protocol);",
							"        postman.setEnvironmentVariable(\"DxBaseUrl\", staging_url);",
							"        postman.setEnvironmentVariable(\"wtp_base_url\", wtp_staging_url);",
							"    }",
							"    else",
							"    {",
							"        return console.log(\"Failed to set environment variables.\");",
							"    }  ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36 FirePHP/0.7.4"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json, text/javascript, */*; q=0.01"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate"
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"{{version}}\",\r\n    \"method\": \"Authorization.LoginByCredentials\",\r\n    \"params\": [{\r\n        \"login\": \"{{email}}\",\r\n        \"password\": \"{{password}}\"\r\n    }]\r\n}"
				},
				"url": {
					"raw": "{{protocol}}{{DxBaseUrl}}",
					"host": [
						"{{protocol}}{{DxBaseUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ForgotPassword- Step1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11570e6d-3aa0-4989-94cd-e222b4812a37",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"jsonrpc\": \"{{version}}\",\r\n  \"method\": \"Authorization.ForgotPassword\",\r\n  \"params\": [{\r\n      \"Email\": \"{{email}}\",      \r\n      \"ForgotPasswordUrl\": \"{{wtp_base_url}}\"\r\n  }]\r\n}"
				},
				"url": {
					"raw": "{{protocol}}{{DxBaseUrl}}",
					"host": [
						"{{protocol}}{{DxBaseUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "SignUp",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "74427198-df9a-46ad-9e4e-5a51c0e2f3a3",
						"type": "text/javascript",
						"exec": [
							"//\"use strict\";",
							"",
							"var moment = require('moment');",
							"",
							"var date = moment().add(90, 'days').format('YYYY-MM-DDT11:00').toString();",
							"var date2 = moment().add(91, 'days').format('YYYY-MM-DDT11:00').toString();",
							"var birthday = \"30/01/1997\";",
							"",
							"pm.test(\"SetEnvironmentVariables\", function (err, res)",
							"{",
							"    const staging_url = \"staging-acl.dx.exchange\",",
							"          integration_url = \"integration-acl.dx.exchange\",",
							"          base_url = \"acl.dx.exchange\",",
							"          wtp_staging_url = \"https://staging-plat.dx.exchange\",",
							"          wtp_integration_url = \"http://integration-plat.dx.exchange:30010\",",
							"          wtp_base_url = \"https://plat.dx.exchange\",",
							"          dx = pm.environment.get(\"DX\"),",
							"          protocol = \"https://\"; // \"http://\"\"",
							"    if(dx === \"DX\")",
							"    {",
							"        postman.setEnvironmentVariable(\"protocol\", protocol);",
							"        postman.setEnvironmentVariable(\"DxBaseUrl\", staging_url);",
							"        postman.setEnvironmentVariable(\"wtp_base_url\", wtp_staging_url);",
							"        postman.setEnvironmentVariable(\"date\", date);",
							"        postman.setEnvironmentVariable(\"date2\", date2);",
							"        postman.setEnvironmentVariable(\"birthday\", birthday);",
							"        postman.setEnvironmentVariable(\"captcha\", \"test_test\");",
							"        postman.setEnvironmentVariable(\"language\", \"en\");",
							"        postman.setEnvironmentVariable(\"password\", \"1Aa@<>12\");",
							"        postman.setEnvironmentVariable(\"first_name\", \"QA_test\");",
							"        postman.setEnvironmentVariable(\"last_name\", \"Test_qa\");",
							"        postman.setEnvironmentVariable(\"phone\", \"+972528259547\");",
							"        postman.setEnvironmentVariable(\"country\", \"104\"); // 225",
							"        postman.setEnvironmentVariable(\"street\", \"Street 12/2\");  ",
							"        postman.setEnvironmentVariable(\"state\", \"398\");",
							"        postman.setEnvironmentVariable(\"city\", \"Ashdod\");",
							"        postman.setEnvironmentVariable(\"zip\", \"56277\");",
							"        postman.setEnvironmentVariable(\"verification_url\", \"{{wtp_base_url}}/appProxy/openAccountDx.html\");",
							"        //for(let i=0; i<countryAndStations[0].length; i++){",
							"        //pm.environment.set(\"countryCode\", countryAndStations[0][i]);} ",
							"        //for(let i=0; i<countryAndStations[1].length; i++){",
							"        //pm.environment.set(\"stationCode\", countryAndStations[1][i]);} ",
							"    }",
							"    else",
							"    {",
							"        return console.log(\"Failed to set environment variables.\");",
							"    }  ",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f301bb26-62a2-439a-9147-4f9aae655172",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    var auth_token = \"\",",
							"        customer_id,",
							"        reason = \"\",",
							"        statusCode = \"Internal Server Error\";",
							"    if((pm.response.reason(responseBody)) !== statusCode)",
							"    {",
							"        var jsonData = pm.response.json();",
							"        auth_token = jsonData.result.authToken;",
							"        customer_id = jsonData.result.customerId;",
							"        if(auth_token.length !== 0)",
							"        {",
							"            pm.environment.set(\"auth_token\", auth_token);",
							"            pm.environment.set(\"customer_id\", customer_id);",
							"        }",
							"        else",
							"        {",
							"            console.log(jsonData.result.errors.Email);",
							"        }",
							"    }",
							"    else",
							"    {",
							"        reason = pm.response.reason(responseBody);",
							"        console.log(reason);",
							"        return pm.response.to.have.status(200);",
							"    } ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"jsonrpc\": \"{{version}}\",\r\n  \"method\": \"Authorization.SignUp\",\r\n  \"params\": [{\r\n    \"FirstName\": \"{{first_name}}\",\r\n    \"LastName\": \"{{last_name}}\",\r\n    \"Email\": \"{{email}}\",\r\n    \"Password\": \"{{password}}\",\r\n    \"receivePromoEmail\": false,\r\n    \"AcceptTerms\": true,\r\n    \"Captcha\": \"{{captcha}}\",\r\n    \"siteLanguage\": \"{{language}}\",\r\n    \"EmailValidationUrl\": \"{{verification_url}}\",\r\n    \"ReferLink\": \"{{verification_url}}\",\r\n    \"CampaignId\": 1,\r\n    \"SubCampaignId\": 1,\r\n    \"AAid\": \"aaid\",\r\n    \"ABid\": \"abid\",\r\n    \"ACid\": \"acid\",\r\n    \"receivePromoSMS\": false,\r\n    \"receivePromoPushToMobile\": false,\r\n    \"ReceivePromoEmail\" : false,\r\n    \"receiveTradingEmail\": false \r\n  }],\r\n  \"id\": \"{{id}}\"\r\n}\r\n"
				},
				"url": {
					"raw": "{{protocol}}{{DxBaseUrl}}",
					"host": [
						"{{protocol}}{{DxBaseUrl}}"
					]
				}
			},
			"response": [
				{
					"name": "SignUp_response3",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"Authorization.SignUp\",\r\n  \"params\": [{\r\n    \"FirstName\": \"{{first_name}}\",\r\n    \"LastName\": \"{{last_name}}\",\r\n    \"Email\": \"{{email}}\",\r\n    \"Password\": \"{{password}}\",\r\n    \"receivePromoEmail\": false,\r\n    \"AcceptTerms\": true,\r\n    \"Captcha\": \"{{captcha}}\",\r\n    \"siteLanguage\": \"{{language}}\",\r\n    \"EmailValidationUrl\": \"{{verification_url}}\",\r\n    \"receivePromoSMS\": false,\r\n    \"receivePromoPushToMobile\": false,\r\n    \"receiveTradingEmail\": false \r\n  }],\r\n  \"id\": \"{{id}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{DxBaseUrl}}",
							"protocol": "https",
							"host": [
								"{{DxBaseUrl}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Accept",
							"value": "application/json, text/javascript, */*; q=0.01",
							"name": "Accept",
							"description": "Custom header"
						},
						{
							"key": "Accept-Encoding",
							"value": "gzip, deflate, br",
							"name": "Accept-Encoding",
							"description": "Custom header"
						},
						{
							"key": "Accept-Language",
							"value": "en-US,en;q=0.9,ru;q=0.8",
							"name": "Accept-Language",
							"description": "Custom header"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization",
							"name": "Access-Control-Allow-Headers",
							"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, OPTIONS",
							"name": "Access-Control-Allow-Methods",
							"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"name": "Access-Control-Allow-Origin",
							"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
						},
						{
							"key": "Authorization",
							"value": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imxvbmdfd2F5XzI0QG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoibG9uZyIsImxhc3ROYW1lIjoid2F5IiwiY3VzdG9tZXJJZCI6IjEwMDAwMTEwMDAwMDAwMDA2MiIsImV4cCI6MTUzMzA0NzQ2MCwianRpIjoiMTAwMDAxMTAwMDAwMDAwMDYyIn0.v5BI8PmH42pzfa_clvuv7vtfrSbV4MZAv-2dwpoRDy77liNn5sB9rkxYyLdtmyL-kIYWIMRBrh5W_Zi6JjAG-A",
							"name": "Authorization",
							"description": "Custom header"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Mon, 02 Jul 2018 08:14:03 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Incap-Client-Ip",
							"value": "93.157.86.33",
							"name": "Incap-Client-Ip",
							"description": "Custom header"
						},
						{
							"key": "Incap-Proxy-1052",
							"value": "OK",
							"name": "Incap-Proxy-1052",
							"description": "Custom header"
						},
						{
							"key": "Origin",
							"value": "https://plat.dx.exchange",
							"name": "Origin",
							"description": "Custom header"
						},
						{
							"key": "Referer",
							"value": "https://plat.dx.exchange/appProxy/openAccountDx.html",
							"name": "Referer",
							"description": "Custom header"
						},
						{
							"key": "Request-Id",
							"value": "1fb909e4-833f-481b-96e5-d58b0acbaca3",
							"name": "Request-Id",
							"description": "Custom header"
						},
						{
							"key": "Request-Ip",
							"value": "93.157.86.33",
							"name": "Request-Ip",
							"description": "Custom header"
						},
						{
							"key": "Server",
							"value": "fasthttp",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Source-System-Id",
							"value": "1",
							"name": "Source-System-Id",
							"description": "Custom header"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "User-Agent",
							"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36",
							"name": "User-Agent",
							"description": "Custom header"
						},
						{
							"key": "X-CDN",
							"value": "Incapsula",
							"name": "X-CDN",
							"description": "Custom header"
						},
						{
							"key": "X-Forwarded-For",
							"value": "93.157.86.33",
							"name": "X-Forwarded-For",
							"description": "A de facto standard for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer"
						},
						{
							"key": "X-Iinfo",
							"value": "2-9676495-9679353 NNNN CT(0 0 0) RT(1530519138697 101752) q(0 0 0 -1) r(25 25) U6",
							"name": "X-Iinfo",
							"description": "Custom header"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "YHyZ3AdQTX6xER0+31bfsN+sM1sAAAAAQUIPAAAAAACoELAIThVZ86Yfyi99EjPO",
							"key": "visid_incap_1714807"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "7hIiMtPijTSz6Aq9hnSZDlfDNFsAAAAAzIFlM7pBN9+9VpjbH2BvuQ==",
							"key": "incap_ses_1052_1714807"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "s803lYmlSGSgT++COvd9b/bDNFsAAAAAQUIPAAAAAAB8pXTWcYSO5eCD2aYD2ibF",
							"key": "visid_incap_1721148"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "8qDwX0wUSlmCooi/hnSZDmLeOVsAAAAADfrXUfOM+MsA+he2Bp/utA==",
							"key": "incap_ses_1052_1721148"
						}
					],
					"body": "{\"id\":\"1\",\"result\":{\"customerId\":\"100001100000000091\",\"authToken\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImtSSXZFb25yQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiUUFfdGVzdCIsImxhc3ROYW1lIjoiVGVzdF9xYSIsImN1c3RvbWVySWQiOiIxMDAwMDExMDAwMDAwMDAwOTEiLCJleHAiOjE1MzMxMTEyNDMsImp0aSI6IjEwMDAwMTEwMDAwMDAwMDA5MSJ9.ckpO8kZ7UW7HClWzG9qIuPxN6xEENYXDoogxcmzH4LkQOMm3gmy_BIIpFxLGwG-xx0GRX1dm-PZzIG7RKPcfAw\",\"errors\":null,\"expiry\":2592000},\"error\":null}\n"
				},
				{
					"name": "SignUp-Response4",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"Authorization.SignUp\",\r\n  \"params\": [{\r\n    \"FirstName\": \"{{first_name}}\",\r\n    \"LastName\": \"{{last_name}}\",\r\n    \"Email\": \"{{email}}\",\r\n    \"Password\": \"{{password}}\",\r\n    \"receivePromoEmail\": false,\r\n    \"AcceptTerms\": true,\r\n    \"Captcha\": \"{{captcha}}\",\r\n    \"siteLanguage\": \"{{language}}\",\r\n    \"EmailValidationUrl\": \"{{verification_url}}\",\r\n    \"ReferLink\": \"{{verification_url}}\",\r\n    \"CampaignId\": 1,\r\n    \"SubCampaignId\": 1,\r\n    \"AAid\": \"aaid\",\r\n    \"ABid\": \"abid\",\r\n    \"ACid\": \"acid\",\r\n    \"receivePromoSMS\": false,\r\n    \"receivePromoPushToMobile\": false,\r\n    \"ReceivePromoEmail\" : false,\r\n    \"receiveTradingEmail\": false \r\n  }],\r\n  \"id\": \"{{id}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{DxBaseUrl}}",
							"protocol": "https",
							"host": [
								"{{DxBaseUrl}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Accept",
							"value": "application/json, text/javascript, */*; q=0.01",
							"name": "Accept",
							"description": "Custom header"
						},
						{
							"key": "Accept-Encoding",
							"value": "gzip, deflate, br",
							"name": "Accept-Encoding",
							"description": "Custom header"
						},
						{
							"key": "Accept-Language",
							"value": "ja-JP,ja;q=0.8,en-US;q=0.6,en;q=0.4",
							"name": "Accept-Language",
							"description": "Custom header"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization",
							"name": "Access-Control-Allow-Headers",
							"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, OPTIONS",
							"name": "Access-Control-Allow-Methods",
							"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"name": "Access-Control-Allow-Origin",
							"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
						},
						{
							"key": "Connection",
							"value": "close",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Mon, 02 Jul 2018 10:16:54 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Incap-Client-Ip",
							"value": "49.98.151.57",
							"name": "Incap-Client-Ip",
							"description": "Custom header"
						},
						{
							"key": "Incap-Proxy-894",
							"value": "OK",
							"name": "Incap-Proxy-894",
							"description": "Custom header"
						},
						{
							"key": "Origin",
							"value": "https://dx.exchange",
							"name": "Origin",
							"description": "Custom header"
						},
						{
							"key": "Referer",
							"value": "https://dx.exchange/",
							"name": "Referer",
							"description": "Custom header"
						},
						{
							"key": "Request-Id",
							"value": "7b009c8c-0399-4f87-b331-ade81e486c06",
							"name": "Request-Id",
							"description": "Custom header"
						},
						{
							"key": "Request-Ip",
							"value": "49.98.151.57",
							"name": "Request-Ip",
							"description": "Custom header"
						},
						{
							"key": "Server",
							"value": "fasthttp",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Source-System-Id",
							"value": "1",
							"name": "Source-System-Id",
							"description": "Custom header"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "User-Agent",
							"value": "Mozilla/5.0 (Linux; Android 7.0; SO-01J Build/39.2.B.0.336) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.116 Mobile Safari/537.36",
							"name": "User-Agent",
							"description": "Custom header"
						},
						{
							"key": "X-CDN",
							"value": "Incapsula",
							"name": "X-CDN",
							"description": "Custom header"
						},
						{
							"key": "X-Forwarded-For",
							"value": "49.98.151.57",
							"name": "X-Forwarded-For",
							"description": "A de facto standard for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer"
						},
						{
							"key": "X-Iinfo",
							"value": "4-21901013-21901018 NNNN CT(0 0 0) RT(1530526610980 17) q(0 0 0 -1) r(26 26) U6",
							"name": "X-Iinfo",
							"description": "Custom header"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "YHyZ3AdQTX6xER0+31bfsN+sM1sAAAAAQUIPAAAAAACoELAIThVZ86Yfyi99EjPO",
							"key": "visid_incap_1714807"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "7hIiMtPijTSz6Aq9hnSZDlfDNFsAAAAAzIFlM7pBN9+9VpjbH2BvuQ==",
							"key": "incap_ses_1052_1714807"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "s803lYmlSGSgT++COvd9b/bDNFsAAAAAQUIPAAAAAAB8pXTWcYSO5eCD2aYD2ibF",
							"key": "visid_incap_1721148"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "dx.exchange",
							"path": "/",
							"secure": false,
							"value": "kUTnC8OJxmreh5i/hnSZDpH6OVsAAAAAbNmtm9GX+H75qyiql5LZIg==",
							"key": "incap_ses_1052_1721148"
						}
					],
					"body": "{\"id\":\"1\",\"result\":{\"customerId\":\"100001100000000105\",\"authToken\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkFYWExBTVpUQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiUUFfdGVzdCIsImxhc3ROYW1lIjoiVGVzdF9xYSIsImN1c3RvbWVySWQiOiIxMDAwMDExMDAwMDAwMDAxMDUiLCJleHAiOjE1MzMxMTg2MTQsImp0aSI6IjEwMDAwMTEwMDAwMDAwMDEwNSJ9.tUdHMiEYQYXVMwhCtALa0tda0WrX9gWWtNbC2flfmZPuhX46bOkNzcgplMdDBoGNHintKtqxehtG5Vs_WJ60NQ\",\"errors\":null,\"expiry\":2592000},\"error\":null}\n"
				}
			]
		},
		{
			"name": "GetEmailList",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8ff54a12-78db-4d2e-af77-6d10601ddf20",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"SetEnvironmentVariables\", function (err, res)",
							"{",
							"    var action = \"get_email_list&offset=0&site=guerrillamail.com&_=\",",
							"          dx = pm.environment.get(\"DX\");",
							"    if(dx === \"DX\")",
							"    {",
							"        postman.setEnvironmentVariable(\"action\", action);",
							"    }",
							"    else",
							"    {",
							"        return console.log(\"Failed to set environment variables.\");",
							"    }  ",
							"    console.log(err ? err : res);",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5fb394c0-c1a5-4551-8027-71ee47feee85",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    var email_from = \"\",",
							"        email_subject = \"\",",
							"        email_body = \"\",",
							"        address_id = \"\",",
							"        reason = \"\",",
							"        statusCode = \"Internal Server Error\";",
							"        token = postman.getResponseCookie(\"PHPSESSID\").value;   ",
							"        pm.environment.set(\"sid_token\", token); ",
							"    if((pm.response.reason(responseBody)) !== statusCode)",
							"    {",
							"        var jsonData = pm.response.json();",
							"        if (jsonData.sid_token == pm.environment.get(\"sid_token\")){",
							"            email_from = jsonData.list[0].mail_from;",
							"            email_subject = jsonData.list[0].mail_subject;",
							"            //email_body = jsonData.list[0].mail_body;",
							"            email_id = jsonData.list[0].mail_id;",
							"            address_id = jsonData.stats['created_addresses'];",
							"            pm.environment.set(\"email_from\", email_from);",
							"            pm.environment.set(\"mail_subject\", email_subject);",
							"            //pm.environment.set(\"mail_body\", email_body);",
							"            pm.environment.set(\"email_id\", email_id);",
							"            pm.environment.set(\"address_id\", address_id);",
							"        }",
							"    }",
							"    else",
							"    {",
							"        reason = pm.response.reason(responseBody);",
							"        console.log(reason);",
							"        return pm.response.to.have.status(200);",
							"    } ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "PHPSESSID={{sid_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{BaseUrl}}{{action}}{{username}}",
					"host": [
						"{{BaseUrl}}{{action}}{{username}}"
					]
				}
			},
			"response": [
				{
					"name": "GetEmailList-response default",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "PHPSESSID={{sid_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}{{action}}{{username}}",
							"host": [
								"{{BaseUrl}}{{action}}{{username}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate",
							"name": "Cache-Control",
							"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Sat, 04 Aug 2018 09:40:11 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT",
							"name": "Expires",
							"description": "Gives the date/time after which the response is considered stale"
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000",
							"name": "Strict-Transport-Security",
							"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "X-Content-Type-Options",
							"value": ": nosniff",
							"name": "X-Content-Type-Options",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "www.guerrillamail.com",
							"path": "/",
							"secure": false,
							"value": "l269gjhpg3b7hc1h4s7cr1plt1",
							"key": "PHPSESSID"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "www.guerrillamail.com",
							"path": "/",
							"secure": false,
							"value": "value",
							"key": "Cookie_1"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "www.guerrillamail.com",
							"path": "/",
							"secure": false,
							"value": "value",
							"key": "Cookie_2"
						}
					],
					"body": "{\"list\":[{\"mail_from\":\"no-reply@guerrillamail.com\",\"mail_timestamp\":0,\"mail_read\":0,\"mail_date\":\"09:39:04\",\"reply_to\":\"\",\"mail_subject\":\"Welcome to Guerrilla Mail\",\"mail_excerpt\":\"Dear Random User,\\r\\n\\r\\nThank you for using Guerrilla Mail - your temporary email address friend and spam fighter's ally!\\r\\n\\r\\nYour disposable email address has been created ready for use.\\r\\n\\r\\nEmail: ynofdm\",\"mail_id\":1,\"att\":0,\"content_type\":\"text\",\"mail_recipient\":\"ynofdmed\",\"source_id\":0,\"source_mail_id\":0,\"mail_body\":\"Dear Random User,\\r\\n\\r\\nThank you for using Guerrilla Mail - your temporary email address friend and spam fighter's ally!\\r\\n\\r\\nYour disposable email address has been created ready for use.\\r\\n\\r\\nEmail: ynofdmed@sharklasers.com\\r\\n\\r\\nTips & Notes:\\r\\n\\r\\n- You can change this email address! Place your mouse over the Inbox ID at the top of this page and click to edit.\\r\\n\\r\\n- Once you change to a new address, the old address will remain available, simply change back to it. (Note: email is kept for 1 hour)\\r\\n\\r\\n- Waiting for your mail? There is no need to refresh the page, new emails will be added to the list as they come in.\\r\\n\\r\\n- All Emails are deleted after 1 hour.\\r\\n\\r\\nClick on the back the \\\"\\u00ab Back to inbox\\\" to go back to the mail list\\r\\n\\r\\nThanks,\\r\\n\\r\\nGuerrilla Mail Team\\r\\nhttp:\\/\\/www.guerrillamail.com\\/\\r\\n\\r\\n\\\"Free to download, but you have to give your email address so they can inevitably attempt to sell you stuff in the future? guerrillamail.com FTW!\\\"\\r\\n\\r\\nConnect with us:\\r\\nhttps:\\/\\/www.facebook.com\\/GuerrillaMail\\r\\nhttps:\\/\\/twitter.com\\/GuerrillaMail\",\"size\":1034}],\"count\":\"0\",\"email\":\"ynofdmed@guerrillamailblock.com\",\"alias\":\"e2jxoa+cq1ush7jiv43k\",\"ts\":1533375544,\"sid_token\":\"l269gjhpg3b7hc1h4s7cr1plt1\",\"stats\":{\"sequence_mail\":\"53,203,952\",\"created_addresses\":38163242,\"received_emails\":\"8,911,813,334\",\"total\":\"8,858,609,382\",\"total_per_hour\":\"166999\"},\"auth\":{\"success\":true,\"error_codes\":[]}}"
				}
			]
		},
		{
			"name": "GetLastEmail",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fa763372-52c8-47b9-9edb-36948a814d13",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"SetEnvironmentVariables\", function (err, res)",
							"{",
							"    var action = \"fetch_email&email_id=mr_{{email_id}}&site=guerrillamail.com&_=\",",
							"          dx = pm.environment.get(\"DX\");",
							"    if(dx === \"DX\")",
							"    {",
							"        postman.setEnvironmentVariable(\"action\", action);",
							"    }",
							"    else",
							"    {",
							"        return console.log(\"Failed to set environment variables.\");",
							"    }  ",
							"    console.log(err ? err : res);",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "66fa44c8-9403-4745-bc46-1a571e5050bc",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    var username = \"\",",
							"        email_from = \"\",",
							"        email_subject = \"\",",
							"        email_body = \"\",",
							"        ref_mid = \"\",",
							"        reason = \"\",",
							"        statusCode = \"Internal Server Error\";",
							"    if((pm.response.reason(responseBody)) !== statusCode)",
							"    {",
							"        var jsonData = pm.response.json();",
							"        email_from = jsonData.email_from;",
							"        email_subject = jsonData.mail_subject;",
							"        sid_token = jsonData.sid_token;",
							"        pm.environment.set(\"email_from\", email_from);",
							"        pm.environment.set(\"mail_subject\", email_subject);",
							"        pm.environment.set(\"mail_body\", email_body);",
							"        pm.environment.set(\"sid_token\", sid_token);",
							"        ",
							"        email_body = jsonData.mail_body;",
							"        var ver_token = cheerio(email_body).find(\"a[href*='?validation_token']\").attr(\"href\").split(\"=\")[1].split(\"&\")[0];",
							"        pm.environment.set(\"ver_token\", ver_token);",
							"    }",
							"    else",
							"    {",
							"        reason = pm.response.reason(responseBody);",
							"        console.log(reason);",
							"        return pm.response.to.have.status(200);",
							"    } ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "PHPSESSID={{sid_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{BaseUrl}}{{action}}{{time_stamp}}",
					"host": [
						"{{BaseUrl}}{{action}}{{time_stamp}}"
					]
				}
			},
			"response": [
				{
					"name": "GetLastEmail-Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://www.guerrillamail.com/ajax.php?f=fetch_email&email_id=mr_1&site=guerrillamail.com&_=38163242",
							"protocol": "https",
							"host": [
								"www",
								"guerrillamail",
								"com"
							],
							"path": [
								"ajax.php"
							],
							"query": [
								{
									"key": "f",
									"value": "fetch_email"
								},
								{
									"key": "email_id",
									"value": "mr_1"
								},
								{
									"key": "site",
									"value": "guerrillamail.com"
								},
								{
									"key": "_",
									"value": "38163242"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate",
							"name": "Cache-Control",
							"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
						},
						{
							"key": "Connection",
							"value": "close",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Thu, 26 Jul 2018 13:11:02 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT",
							"name": "Expires",
							"description": "Gives the date/time after which the response is considered stale"
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000",
							"name": "Strict-Transport-Security",
							"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "X-Content-Type-Options",
							"value": ": nosniff",
							"name": "X-Content-Type-Options",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date",
							"httpOnly": true,
							"domain": "guerrillamail.com",
							"path": "/",
							"secure": false,
							"value": "d57f226cf4423d23306d4ae708a99b1051532602813",
							"key": "__cfduid"
						},
						{
							"expires": "Invalid Date",
							"httpOnly": false,
							"domain": "www.guerrillamail.com",
							"path": "/",
							"secure": false,
							"value": "kuro6umn9cbr97br4d03qetal1",
							"key": "PHPSESSID"
						}
					],
					"body": "{\"mail_from\":\"no-reply@guerrillamail.com\",\"mail_timestamp\":0,\"mail_read\":1,\"mail_date\":\"00:00:00\",\"reply_to\":\"\",\"mail_subject\":\"Welcome to Guerrilla Mail\",\"mail_excerpt\":\"Dear Random User,\\r\\n\\r\\nThank you for using Guerrilla Mail - your temporary email address friend and spam fighter&#039;s ally!\\r\\n\\r\\nYour disposable email address has been created ready for use.\\r\\n\\r\\nEmail: @shark\",\"mail_id\":1,\"att\":0,\"content_type\":\"text\",\"mail_recipient\":false,\"source_id\":0,\"source_mail_id\":0,\"mail_body\":\"<pre>Dear Random User,\\r\\n\\r\\nThank you for using Guerrilla Mail - your temporary email address friend\\nand spam fighter's ally!\\r\\n\\r\\nYour disposable email address has been created ready for use.\\r\\n\\r\\nEmail: @sharklasers.com\\r\\n\\r\\nTips &amp; Notes:\\r\\n\\r\\n- You can change this email address! Place your mouse over the Inbox ID at\\nthe top of this page and click to edit.\\r\\n\\r\\n- Once you change to a new address, the old address will remain available,\\nsimply change back to it. (Note: email is kept for 1 hour)\\r\\n\\r\\n- Waiting for your mail? There is no need to refresh the page, new emails\\nwill be added to the list as they come in.\\r\\n\\r\\n- All Emails are deleted after 1 hour.\\r\\n\\r\\nClick on the back the \\\"&laquo; Back to inbox\\\" to go back to the mail list\\r\\n\\r\\nThanks,\\r\\n\\r\\nGuerrilla Mail Team\\r\\n<a href=\\\"http:\\/\\/www.guerrillamail.com\\/\\\">http:\\/\\/www.guerrillamail.com\\/<\\/a>\\r\\n\\r\\n\\\"Free to download, but you have to give your email address so they can\\ninevitably attempt to sell you stuff in the future? guerrillamail.com\\nFTW!\\\"\\r\\n\\r\\nConnect with us:\\r\\n<a href=\\\"https:\\/\\/www.facebook.com\\/GuerrillaMail\\\">https:\\/\\/www.facebook.com\\/GuerrillaMail<\\/a>\\r\\n<a href=\\\"https:\\/\\/twitter.com\\/GuerrillaMail\\\">https:\\/\\/twitter.com\\/GuerrillaMail<\\/a><\\/pre>\",\"size\":1026,\"ref_mid\":\"1:6f5023eff54f65c6526366b70838ac0f3df15d34\",\"sid_token\":\"kuro6umn9cbr97br4d03qetal1\",\"auth\":{\"success\":true,\"error_codes\":[]}}"
				}
			]
		},
		{
			"name": "ForgotPassword- Step2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "997c78d0-daff-4905-af6b-380f1733582b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"jsonrpc\": \"{{version}}\",\r\n  \"method\": \"Authorization.RestorePassword\",\r\n  \"params\": [{\r\n      \"email\": \"{{email}}\",      \r\n      \"token\": \"{{ver_token}}\",\r\n      \"password\": \"{{password}}\",\r\n      \"confirmedPassword\": \"{{password}}\"\r\n  }]\r\n}"
				},
				"url": {
					"raw": "{{protocol}}{{DxBaseUrl}}",
					"host": [
						"{{protocol}}{{DxBaseUrl}}"
					]
				}
			},
			"response": []
		}
	]
}